"use strict";let pong;function error(t,e){return`Failed to find ${e} element with id "${t}"`}function getDocumentOfHTMLObject(t){const e=document.getElementById(t);if(e instanceof HTMLObjectElement){const i=e.contentDocument;if(null!==i)return[e,i];throw`document of ${t} is empty`}throw error(t,"html object")}function getHTMLButton(t){const e=document.getElementById(t);if(e instanceof HTMLButtonElement)return e;throw error(t,"html button")}function getSVGRectElement(t,e){const i=t.getElementById(e);if(i instanceof SVGRectElement)return i;throw error(e,"svg rect")}function getSVGTextElement(t,e){const i=t.getElementById(e);if(i instanceof SVGTextElement)return i;throw error(e,"svg text")}function getSVGCircleElement(t,e){const i=t.getElementById(e);if(i instanceof SVGCircleElement)return i;throw error(e,"svg circle")}function getSVGAnimateMotionElement(t,e){const i=t.getElementById(e);if(i instanceof SVGAnimateMotionElement)return i;throw error(e,"svg animate motion")}function getSVGPathElement(t,e){const i=t.getElementById(e);if(i instanceof SVGPathElement)return i;throw error(e,"svg path")}window.onload=function(){const[t,e]=this.getDocumentOfHTMLObject("pong-svg-object");if(window.chrome&&null!=t.parentElement){console.log("is chrome"),t.parentElement.removeChild(t);let i=document.getElementById("chrome-svg-container");i instanceof this.HTMLElement&&null!==e.firstChild&&(i.innerHTML=e.documentElement.outerHTML),pong=new Pong(document)}else pong=new Pong(e)};class Vec2{constructor(t,e){this.x=t,this.y=e}clone(){return new Vec2(this.x,this.y)}add(t){return new Vec2(this.x+t.x,this.y+t.y)}sub(t){return new Vec2(this.x-t.x,this.y-t.y)}mul(t){return new Vec2(this.x*t,this.y*t)}div(t){return new Vec2(this.x/t,this.y/t)}cross(t){return this.x*t.y-this.y*t.x}magnitude2(){return this.x*this.x+this.y*this.y}magnitude(){return Math.sqrt(this.magnitude2())}numberAsString(t){return t==Math.floor(t)?t.toString():t.toFixed(2)}asString(){return`${this.numberAsString(this.x)},${this.numberAsString(this.y)} `}asAbsolute(){return`M${this.asString()}`}asLine(){return`L${this.asString()}`}}class Line{constructor(t,e){this.p1=t,this.p2=e}}class PongElements{constructor(t){this.playerPaddle=getSVGRectElement(t,"pong-player-paddle"),this.aiPaddle=getSVGRectElement(t,"pong-ai-paddle"),this.playerScoreElement=getSVGTextElement(t,"pong-player-score"),this.aiScoreElement=getSVGTextElement(t,"pong-ai-score"),this.ball=getSVGCircleElement(t,"pong-ball"),this.ballAnimation=getSVGAnimateMotionElement(t,"pong-ball-animation"),this.ballPath=getSVGPathElement(t,"pong-ball-path"),this.collisionPath=getSVGPathElement(t,"pong-collision-path"),this.resetButton=getHTMLButton("pong-reset"),this.serveButton=getHTMLButton("pong-serve")}}class Pong{constructor(t){this.width=512,this.height=256,this.center=new Vec2(this.width/2,this.height/2),this.paddleWidth=2,this.paddleHeight=28,this.ballRadius=3,this.paddleVelocity=60,this.playerStartingPosition=new Vec2(0,this.center.y-this.paddleHeight/2),this.aiStartingPosition=new Vec2(this.width-this.paddleWidth,this.center.y-this.paddleHeight/2),this.corners=[new Vec2(-this.ballRadius,this.ballRadius),new Vec2(this.width+this.ballRadius,this.ballRadius),new Vec2(this.width+this.ballRadius,this.height-this.ballRadius),new Vec2(-this.ballRadius,this.height-this.ballRadius)],this.bounds=[[new Line(this.corners[0],this.corners[1]),!1],[new Line(this.corners[0],this.corners[3]),!0],[new Line(this.corners[3],this.corners[2]),!1],[new Line(this.corners[1],this.corners[2]),!0]],this.paddleBounds=[this.bounds[0][0],new Line(new Vec2(this.paddleWidth+this.ballRadius,0),new Vec2(this.paddleWidth+this.ballRadius,this.height)),this.bounds[2][0],new Line(new Vec2(this.width-this.paddleWidth-this.ballRadius,0),new Vec2(this.width-this.paddleWidth-this.ballRadius,this.height))],this.lastAnimationFrame=0,this.playerPosition=this.playerStartingPosition.clone(),this.aiPosition=this.aiStartingPosition.clone(),this.ballVelocity=new Vec2(0,0),this.running=!1,this.shouldServe=!1,this.time=0,this.lastTime=0,this.serveTime=0,this.playerScore=0,this.aiScore=0,this.scoreDur=0,this.collisionDur=0,this.collisionPoint=new Vec2(0,0),this.moveUp=!1,this.moveDown=!1,console.log("constructor"),this.elements=new PongElements(t),this.elements.resetButton.addEventListener("click",()=>{this.reset()}),this.elements.serveButton.addEventListener("click",()=>{this.start()}),document.addEventListener("keydown",t=>{this.handleKeyboard(t)})}get deltaT(){return(this.time-this.lastTime)/1e3}get timeSinceServe(){return(this.time-this.serveTime)/1e3}start(){this.running||(this.running=!0,this.shouldServe=!0,this.lastAnimationFrame=window.requestAnimationFrame(t=>{this.update(t)}))}serve(){this.shouldServe=!1,this.serveTime=this.time,this.ballVelocity.x=this.genRandom(),this.ballVelocity.y=this.genRandom(),this.buildBallPath(this.center)}genRandom(){return 201*Math.random()-100}reset(){this.running=!1,window.cancelAnimationFrame(this.lastAnimationFrame),this.resetPaddles(),this.resetBall(),this.resetScores()}resetPath(t){t.setAttribute("d",this.center.asAbsolute())}resetBall(){this.resetPath(this.elements.ballPath),this.resetPath(this.elements.collisionPath)}resetPaddles(){translateToPosition(this.elements.playerPaddle,this.playerStartingPosition),this.playerPosition=this.playerStartingPosition.clone(),translateToPosition(this.elements.aiPaddle,this.aiStartingPosition),this.aiPosition=this.aiStartingPosition.clone()}resetScores(){this.playerScore=0,this.aiScore=0,this.elements.playerScoreElement.innerHTML="0",this.elements.aiScoreElement.innerHTML="0"}update(t){this.lastTime=this.time,this.time=t,this.shouldServe&&this.serve(),this.processAScore(),this.processHit(),this.updatePlayer(),this.updateAI(),this.running&&(this.lastAnimationFrame=window.requestAnimationFrame(t=>{this.update(t)}))}isColliding(t){return t.y+this.paddleHeight>this.collisionPoint.y&&t.y<this.collisionPoint.y}processAScore(){if(this.timeSinceServe>this.scoreDur)return this.ballVelocity.x>0?void this.processScore(this.elements.playerScoreElement):void this.processScore(this.elements.aiScoreElement)}processScore(t){let e;t==this.elements.playerScoreElement?(this.playerScore++,e=this.playerScore):(this.aiScore++,e=this.aiScore),t.innerHTML=e.toString(),this.running=!1,this.resetBall(),this.resetPaddles()}processHit(){this.timeSinceServe>this.collisionDur&&(this.ballVelocity.x>0?this.isColliding(this.aiPosition)&&this.processPaddleHit(!1):this.isColliding(this.playerPosition)&&this.processPaddleHit(!0))}processPaddleHit(t){this.ballVelocity.x=-this.ballVelocity.x,t?this.collisionPoint.x+=.1:this.collisionPoint.x-=.1,this.buildBallPath(this.collisionPoint),this.serveTime=this.time}updatePlayer(){const t=this.deltaT*this.paddleVelocity;this.moveDown?this.playerPosition.y=Math.min(this.height-this.paddleHeight,this.playerPosition.y+t):this.moveUp&&(this.playerPosition.y=Math.max(this.playerPosition.y-t,0)),(this.moveDown||this.moveUp)&&(console.log("did the move"),translateToPosition(this.elements.playerPaddle,this.playerPosition),this.moveDown=!1,this.moveUp=!1)}updateAI(){let t=!1;const e=this.deltaT*this.paddleVelocity;this.aiPosition.y+this.paddleHeight/2>this.collisionPoint.y?(t=!0,this.aiPosition.y=Math.max(this.aiPosition.y-e,0)):this.aiPosition.y<this.collisionPoint.y&&(t=!0,this.aiPosition.y=Math.min(this.height-this.paddleHeight,this.aiPosition.y+e)),t&&translateToPosition(this.elements.aiPaddle,this.aiPosition)}buildBallPath(t){const e=this.ballVelocity.mul(2e3),i=new Line(t,t.add(e)),s=[];for(;;){const t=this.findNextCollision(i);if(null===t)break;{const[n,o]=t;if(this.adjustCollision(n,o),s.push(n),o){for(const t of this.paddleBounds){const e=lineLineIntersect(i,t);null!==e&&(this.collisionPoint=e)}break}e.y=-e.y,i.p1=n,i.p2=n.add(e)}}this.ballVelocity=e.div(2e3);const n=this.getPathCommands(t,s);this.elements.ballPath.setAttribute("d",n);const o=this.ballVelocity.magnitude();this.scoreDur=this.elements.ballPath.getTotalLength()/o,this.elements.ballAnimation.setAttribute("dur",this.scoreDur.toString()),this.elements.ballAnimation.beginElement(),s.pop(),s.push(this.collisionPoint);const l=this.getPathCommands(t,s);this.elements.collisionPath.setAttribute("d",l),this.collisionDur=this.elements.collisionPath.getTotalLength()/o}getPathCommands(t,e){let i=t.asAbsolute();for(const t of e)i=i.concat(t.asLine());return i}adjustCollision(t,e){e?t.x>20?t.x+=.01:t.x-=.01:t.y>10?t.y-=.01:t.y+=.01}findNextCollision(t){for(const[e,i]of this.bounds){const s=lineLineIntersect(t,e);if(null!==s)return[s,i]}return null}handleKeyboard(t){const e=t.key;this.running&&(","===e?this.moveUp=!0:"."===e&&(this.moveDown=!0))," "===e?this.start():"n"===e&&this.reset()}}function translateToPosition(t,e){translateTo(t,e.x,e.y)}function translateTo(t,e,i){t.setAttribute("transform",`translate(${e}, ${i})`)}function lineLineIntersect(t,e){const i=t.p1,s=e.p1,n=t.p2.sub(i),o=e.p2.sub(s),l=n.cross(o),h=s.sub(i);if(0===l)return null;{const t=h.cross(o.div(l)),e=h.cross(n.div(l));return 0<=t&&t<=1&&0<=e&&e<=1?0===t?s.add(o.mul(e)):i.add(n.mul(t)):null}}
